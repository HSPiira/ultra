# Generated by Django 5.2.7 on 2025-10-08 22:40

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import apps.core.utils.generators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "__first__"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=apps.core.utils.generators.generate_cuid,
                        editable=False,
                        max_length=25,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When record was created."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When record was last updated."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="ACTIVE",
                        help_text="Business or operational status of this record.",
                        max_length=10,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if record is soft deleted."
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, help_text="When record was soft deleted.", null=True
                    ),
                ),
                (
                    "plan_name",
                    models.CharField(help_text="Name of the plan.", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Plan description.", max_length=500
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Plan",
                "verbose_name_plural": "Plans",
                "db_table": "plans",
            },
        ),
        migrations.CreateModel(
            name="Scheme",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=apps.core.utils.generators.generate_cuid,
                        editable=False,
                        max_length=25,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When record was created."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When record was last updated."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="ACTIVE",
                        help_text="Business or operational status of this record.",
                        max_length=10,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if record is soft deleted."
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, help_text="When record was soft deleted.", null=True
                    ),
                ),
                (
                    "scheme_name",
                    models.CharField(help_text="Name of the scheme.", max_length=255),
                ),
                (
                    "card_code",
                    models.CharField(
                        help_text="Unique code for the scheme.",
                        max_length=3,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Scheme description.", max_length=500
                    ),
                ),
                ("start_date", models.DateField(help_text="Start date.")),
                ("end_date", models.DateField(help_text="End date.")),
                (
                    "termination_date",
                    models.DateField(
                        blank=True, help_text="Termination date.", null=True
                    ),
                ),
                (
                    "limit_amount",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Coverage or limit amount.",
                        max_digits=15,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "family_applicable",
                    models.BooleanField(default=False, help_text="Applies to family?"),
                ),
                (
                    "remark",
                    models.TextField(
                        blank=True, help_text="Additional remarks.", max_length=500
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        help_text="Associated company.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="schemes",
                        to="companies.company",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Scheme",
                "verbose_name_plural": "Schemes",
                "db_table": "nm_schemes",
            },
        ),
        migrations.CreateModel(
            name="Benefit",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=apps.core.utils.generators.generate_cuid,
                        editable=False,
                        max_length=25,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When record was created."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When record was last updated."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="ACTIVE",
                        help_text="Business or operational status of this record.",
                        max_length=10,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if record is soft deleted."
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, help_text="When record was soft deleted.", null=True
                    ),
                ),
                (
                    "benefit_name",
                    models.CharField(help_text="Name of the benefit.", max_length=255),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Benefit description.", max_length=500
                    ),
                ),
                (
                    "in_or_out_patient",
                    models.CharField(
                        choices=[
                            ("INPATIENT", "Inpatient"),
                            ("OUTPATIENT", "Outpatient"),
                            ("BOTH", "Both"),
                        ],
                        help_text="Type of benefit.",
                        max_length=20,
                    ),
                ),
                (
                    "limit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Coverage or limit amount.",
                        max_digits=15,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Benefit",
                "verbose_name_plural": "Benefits",
                "db_table": "benefits",
                "unique_together": {("benefit_name", "in_or_out_patient")},
            },
        ),
        migrations.CreateModel(
            name="SchemeItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=apps.core.utils.generators.generate_cuid,
                        editable=False,
                        max_length=25,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When record was created."
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="When record was last updated."
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("INACTIVE", "Inactive"),
                            ("SUSPENDED", "Suspended"),
                        ],
                        default="ACTIVE",
                        help_text="Business or operational status of this record.",
                        max_length=10,
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False, help_text="Indicates if record is soft deleted."
                    ),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, help_text="When record was soft deleted.", null=True
                    ),
                ),
                ("object_id", models.CharField(max_length=30)),
                (
                    "limit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Coverage or limit amount.",
                        max_digits=15,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "copayment_percent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Copayment percentage.",
                        max_digits=5,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="Associated plan or benefit.",
                        limit_choices_to=models.Q(
                            ("app_label", "schemes"), ("model__in", ["plan", "benefit"])
                        ),
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="User who deleted the record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scheme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="schemes.scheme",
                    ),
                ),
            ],
            options={
                "verbose_name": "Scheme Item",
                "verbose_name_plural": "Scheme Items",
                "db_table": "scheme_items",
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="scheme_item_content_ebb28d_idx",
                    ),
                    models.Index(
                        fields=["scheme", "content_type", "object_id"],
                        name="scheme_item_scheme__9e2c76_idx",
                    ),
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("scheme", "content_type", "object_id"),
                        name="unique_scheme_item",
                    )
                ],
                "unique_together": {("scheme", "content_type", "object_id")},
            },
        ),
    ]
