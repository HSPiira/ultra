# Generated by Django 5.1.4 on 2025-10-24 23:39

from django.db import migrations


def assign_benefits_to_plans(apps, schema_editor):
    """
    Assign existing benefits to the first available plan.
    This is a temporary solution - in production, you'd want to properly
    categorize benefits based on business logic.
    """
    Benefit = apps.get_model('schemes', 'Benefit')
    Plan = apps.get_model('schemes', 'Plan')
    
    # Get the first plan, or create a default one
    plan = Plan.objects.first()
    if not plan:
        plan = Plan.objects.create(
            plan_name="Default Plan",
            description="Default plan for existing benefits",
            status="ACTIVE"
        )
    
    # Assign all benefits without a plan to this plan
    benefits_without_plan = Benefit.objects.filter(plan__isnull=True)
    benefits_without_plan.update(plan=plan)


def reverse_assign_benefits_to_plans(apps, schema_editor):
    """
    Remove plan assignments from benefits.
    """
    Benefit = apps.get_model('schemes', 'Benefit')
    Benefit.objects.filter(plan__isnull=False).update(plan=None)


class Migration(migrations.Migration):
    dependencies = [
        ("schemes", "0005_alter_benefit_plan"),
    ]

    operations = [
        migrations.RunPython(
            assign_benefits_to_plans,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
