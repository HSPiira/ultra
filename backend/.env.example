# Django Settings
# SECURITY WARNING: Generate a new secret key for production
# You can generate one with: python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
SECRET_KEY=your-secret-key-here

# Set to False in production
DEBUG=True

# Comma-separated list of allowed hosts
# Example: localhost,127.0.0.1,yourdomain.com
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0,testserver

# CORS Settings
# SECURITY WARNING: Set to False in production!
# For development: CORS_ALLOW_ALL_ORIGINS=True allows requests from any origin
# For production: CORS_ALLOW_ALL_ORIGINS=False and specify CORS_ALLOWED_ORIGINS
CORS_ALLOW_ALL_ORIGINS=False

# Comma-separated list of allowed CORS origins (required when CORS_ALLOW_ALL_ORIGINS=False)
# Example: http://localhost:5173,http://127.0.0.1:5173,https://yourdomain.com
CORS_ALLOWED_ORIGINS=http://localhost:5173,http://127.0.0.1:5173

# Database Configuration (optional, defaults to SQLite)
# DATABASE_ENGINE=django.db.backends.sqlite3
# DATABASE_NAME=db.sqlite3
# For PostgreSQL:
# DATABASE_ENGINE=django.db.backends.postgresql
# DATABASE_NAME=ultra_db
# DATABASE_USER=ultra_user
# DATABASE_PASSWORD=your-db-password
# DATABASE_HOST=localhost
# DATABASE_PORT=5432

# Redis Cache (optional, defaults to local memory cache when DEBUG=True)
# REDIS_URL=redis://127.0.0.1:6379/1

# Default Permission Class
# SECURITY WARNING: Use IsAuthenticated in production!
# Options: AllowAny (for development/testing), IsAuthenticated (for production)
# Default: IsAuthenticated (if not set)
DEFAULT_PERMISSION_CLASS=AllowAny
